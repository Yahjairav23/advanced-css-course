// @import "../abstracts/variables";

.row {
    max-width: $grid-width;
    // if the viewport is less than 1140 px it will fill 100% of the viewport
    background-color: burlywood;
    margin: 0 auto;
    // top and bottom will have no margin and the left and right margin will be even, making the element centered

    &:not(:last-child){
        // not does the oposite. select everything accept last child
        margin-bottom: $gutter-vertical;
        // we put bottom margin on all child elements accept the last child
    }

    @include clearfix;

    [class^="col-"] {
        // this is an attricute selector.
        // it will select all of the class attricutes that start with "col-"
        // "^" = "starts with"
        // "*" = "that contain"
        // $ = "ends with"
        background-color: pink;
        float: left;
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }

    }

    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal}) / 2);
            // can use this function to do calculations and use mixed units of measurements
            // have to use "#{}" around scss variables in order to use them in calc

    }

    .col-1-of-3 {
        width: calc((100% - (#{$gutter-horizontal} * 2)) / 3);

    }

    .col-2-of-3 {
        width: calc(2 * ((100% - (#{$gutter-horizontal} * 2)) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - (#{$gutter-horizontal} * 3)) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - (#{$gutter-horizontal} * 3)) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - (#{$gutter-horizontal} * 3)) / 4) + (#{$gutter-horizontal} * 2));
    }
}